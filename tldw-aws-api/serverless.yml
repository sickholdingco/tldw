org: sickholdingdev
app: tldw-aws-api
service: tldw-aws-api
frameworkVersion: "3"

plugins:
  - serverless-python-requirements

package:
  individually: true
  patterns:
    - "!node_modules/**"
    - "!venv/**"

custom:
  tableName: "topic-info"
  pythonRequirements:
    slim: true

provider:
  name: aws
  runtime: python3.9
  region: us-east-2
  deploymentMethod: direct
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["TopicInfoDynamoDBTable", "Arn"] }
  environment:
    TOPIC_INFO_TABLE: ${self:custom.tableName}
    YOUTUBE_API_KEY: poop

resources:
  Resources:
    TopicInfoDynamoDBTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:custom.tableName}

functions:
  hello:
    handler: handler.hello
    events:
      - httpApi:
          path: /
          method: get
  youtube_transcript:
    handler: index.generateTranscript
    module: youtube_transcript_module
    events:
      - httpApi:
          path: /generateTranscript
          method: get
  generate_embeddings:
    handler: index.generateEmbeddings
    module: generate_embeddings_module
    events:
      - httpApi:
          path: /generateEmbeddings
          method: get
  pinecone_query:
    handler: index.generatePinconeQuery
    module: pinecone_query_module
    events:
      - httpApi:
          path: /generatePinconeQuery
          method: get
  answer_question:
    handler: index.generateAnswer
    module: answer_question_module
    events:
      - httpApi:
          path: /generateAnswer
          method: get
